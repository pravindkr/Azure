{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {	
		"projectName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
			"defaultValue": "Accops Digital Workspace",
            "metadata": {
                "description": "Define the project name."
            }
        },
		"AccopsDaasSystemSize": {
           "type": "string",
           "allowedValues": [
               "Demo",
               "25 CCU",
               "50 CCU",
               "100 CCU",
               "500 CCU",
               "1000 CCU",
               "2000 CCU",
               "5000 CCU"			   
            ],
            "defaultValue": "100 CCU",
            "metadata": {
                "description": "The size of the Accops DaaS System you want to deploy."
                }
        },
		"systemAvailability": {
            "type": "string",
            "allowedValues": [
               "HA",
               "Not HA"
            ],
            "defaultValue": "Not HA",
            "metadata": {
                "description": "Determines whether this is a high available deployment or not. A HA deployment contains multiple instances of single point of failures."
               }
        },
		"HysecureWebNodeNamePrefix": {
            "defaultValue": "HySecure-Web-Node-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_F2s_v2",
            "type": "String",
			"allowedValues": [
			    "Standard_F2s_v2",
				"Standard_F4s_v2",
				"Standard_F8s_v2",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
				"Standard D2s v3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "Size of the virtual Machines for Hysecure Web Nodes"
            }
        },
		"numberOfWebTierInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of HySecure Web Tier Servers"
            },
            "allowedValues": [
                1,
                2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10
            ],
            "defaultValue": 2
        },
        "HysecureManagementNodeNamePrefix": {
            "defaultValue": "HySecure-Mgmt-Node-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for HySecure Management VM names"
            }
        },
		"adminUsername": {
		    "defaultValue": "accopsadmin",
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "SecureString",
			"defaultValue": "Demo@1234567890",
            "metadata": {
                "description": "Admin password"
            }
        },
		"domainName": {
            "type": "string",
            "defaultValue": "accops.local",
            "metadata": {
            "description": "The FQDN of the AD Domain created "
            }
        },
		"osType": {
            "type": "string",
            "allowedValues": [
                "Windows Server 2016 Datacenter",
                "Windows Server 2019 Datacenter",
                "Windows Server 2022 Datacenter"
            ],
            "defaultValue": "Windows Server 2022 Datacenter",
            "metadata": {
                "description": "The type of the operating system you want to deploy."
            }
        },
		"HyworksBrokerNodeNamePrefix": {
            "defaultValue": "HyWorksBroker-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"vmSizeOfBroker": {
            "defaultValue": "Standard_F2s_v2",
            "type": "String",
			"allowedValues": [
			    "Standard_F2s_v2",
				"Standard_F4s_v2",
				"Standard_F8s_v2",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "Size of the virtual Machines for HyWorks Broker Nodes"
            }
        },
		"numberOfBrokerTierInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of HyWorks Broker Tier Servers"
            },
            "allowedValues": [
                1,
                2,
				3,
				4,
				5
            ],
            "defaultValue": 2
        },
		"HyworksControllerNodeNamePrefix": {
            "defaultValue": "HyWorks-Ctrl-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }	
        },
		"SQLDatabaseNodeNamePrefix": {
            "defaultValue": "Sql-Srv-",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"ARSMasterNodeNamePrefix": {
            "defaultValue": "ARS-Master-Node",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"ARSDataNodeNamePrefix": {
            "defaultValue": "ARS-Data-Node",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"GoldWindowsMultisessionImage": {
            "type": "string",
            "allowedValues": [
			    "Windows 10 Enterprise multi-session, version 1909",
				"Windows 10 Enterprise multi-session, version 2004",
				"Windows 10 Enterprise multi-session, version 20H2",
				"Windows 10 Enterprise multi-session, version 21H1",
				"Windows 10 Enterprise multi-session, version 21H2",
			    "Windows 10 Enterprise multi-session, version 1909 - Gen2",
				"Windows 10 Enterprise multi-session, version 2004 - Gen2",
				"Windows 10 Enterprise multi-session, version 20H2 - Gen2",
				"Windows 10 Enterprise multi-session, version 21H1 - Gen2",
				"Windows 10 Enterprise multi-session, version 21H2 - Gen2",
				"Windows 11 Enterprise multi-session",
                "Windows 10 Enterprise multi-session, version 1909 + Microsoft 365 Apps - Gen2",
                "Windows 10 Enterprise multi-session, version 2004 + Microsoft 365 Apps - Gen2",
				"Windows 10 Enterprise multi-session, version 20H2 + Microsoft 365 Apps - Gen2",
                "Windows 10 Enterprise multi-session, version 21H1 + Microsoft 365 Apps - Gen2",
				"Windows 10 Enterprise multi-session, version 21H2 + Microsoft 365 Apps - Gen2",
				"Windows 11 Enterprise multi-session + Microsoft 365 Apps"
            ],
            "defaultValue": "Windows 10 Enterprise multi-session, version 21H2 + Microsoft 365 Apps - Gen2",
            "metadata": {
                "description": "The type of the operating system you want to deploy for Pooled VDI."
            }
        },
		"GoldMultisessionVMNamePrefix": {
            "defaultValue": "GoldWinMS",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"GoldWindowsDedicatedImage": {
            "type": "string",
            "allowedValues": [
			    "Windows 10 Enterprise, Version 1909",
				"Windows 10 Enterprise, Version 2004",
				"Windows 10 Enterprise, Version 20H2",
				"Windows 10 Enterprise, Version 21H1",
				"Windows 10 Enterprise, Version 21H2",
                "Windows 10 Enterprise, Version 1909 - Gen2",
                "Windows 10 Enterprise, Version 2004 - Gen2",
                "Windows 10 Enterprise, Version 20H2 - Gen2",
				"Windows 10 Enterprise, Version 21H1 - Gen2",
				"Windows 10 Enterprise, Version 21H2 - Gen2",
				"Windows 11 Enterprise"
            ],
            "defaultValue": "Windows 10 Enterprise, Version 21H2 - Gen2",
            "metadata": {
                "description": "The type of the operating system you want to deploy for Personal VDI."
            }
        },
		"GoldDedicatedVMNamePrefix": {
            "defaultValue": "GoldWinDS",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"GoldWindowsServerImage": {
            "type": "string",
            "allowedValues": [
                "Windows Server 2016 Datacenter",
                "Windows Server 2019 Datacenter",
                "Windows Server 2022 Datacenter"
            ],
            "defaultValue": "Windows Server 2022 Datacenter",
            "metadata": {
                "description": "The type of the operating system you want to deploy for Desktop and Applicaton Virtualization."
            }
        },
		"GoldWindowsServerVMNamePrefix": {
            "defaultValue": "GoldWinSrv",
            "type": "String",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
		"virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
             "description": "Size of the Gold Virtual Machine"
            }
        },
		"osDiskType": {
            "type": "string",
			"defaultValue": "Standard_LRS"
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "The location of resources such as templates and DSC modules that the script is dependent"
				},
			"defaultValue": "https://raw.githubusercontent.com/pravindkr/Azure/main/B2B/azuredeploy.json"
		},
		"_artifactsLocationSasToken": {
			"type": "securestring",
			"metadata": {
				"description": "Auto-generated token to access _artifactsLocation"
			},
		"defaultValue": ""
		},
		"patchMode": {
            "type": "string",
			"defaultValue": "AutomaticByOS"
        }
    },
    "variables": {
        "availabilitySet1Name": "AvSetHSWebTier",
		"availabilitySet2Name": "AvSetHSMgmtTier",
		"availabilitySet3Name": "AvSetHWBrokerTier",
		"availabilitySet4Name": "AvSetHWControlTier",
		"availabilitySet5Name": "AvSetADDSTier",
		"availabilitySet6Name": "AvSetSQLTier",
		"availabilitySet7Name": "AvSetARSMgmtTier",
		"availabilitySet8Name": "AvSetARSDataTier",
        "storageAccountType": "Standard_LRS",
        "storageAccountName": "[uniqueString(resourceGroup().id)]",
        "virtualNetworkName": "AccopsDaasVNet",
        "subnet1Name": "HySecureWebSubnet",
		"subnet2Name": "HySecureMgmtSubnet",
		"subnet3Name": "HyWorksBrokerSubnet",
		"subnet4Name": "HyWorksControllerSubnet",
		"subnet5Name": "ADDSSubnet",
		"subnet6Name": "SQLSubnet",
		"subnet7Name": "VDISubnet",
		"subnet8Name": "ARSSubnet",
		"subnet9Name": "AzureFirewallSubnet",
		"subnet10Name": "AzureBastionSubnet",
		"subnet11Name": "GatewaySubnet",
        "loadBalancer2Name": "Intlb",
		"publicIPAddressName": "PubliclbIP",
		"loadBalancer1Name": "Extlb",
		"loadBalancer3Name": "HWBrokerlb",
		"loadBalancer4Name": "SQLIntlb",
        "networkInterface1Name": "HSWebNic",
		"networkInterface2Name": "HSMgmtNic",
		"networkInterface3Name": "HWBrokerNic",
		"networkInterface4Name": "HWControlNic",
		"networkInterface5Name": "ADDCNic",
		"networkInterface6Name": "SQLNic",
		"networkInterface7Name": [
			"MSVDINic",
			"DVDINic",
			"SHDNic"
		],	
		"networkInterface8Name": "ARSNic",
		"networkInterface9Name": [
			"ADPDCNic",
			"ADBDCNic"
		],
		"vmName": [
            "HQPDC",
            "HQBDC"
        ],
		"ipAddress": [
			"172.16.0.228",
			"172.16.0.229"
		],
		"vnetTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet.json', parameters('_artifactsLocationSasToken')))]",
		"nicTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/nic.json', parameters('_artifactsLocationSasToken')))]",
		"configureADBDCTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/configureADBDC.json', parameters('_artifactsLocationSasToken')))]",
		"adBDCConfigurationModulesURL": "[uri(parameters('_artifactsLocation'), 'DSC/ConfigureADBDC.ps1.zip')]",
		"adBDCConfigurationScript": "ConfigureADBDC.ps1",
		"adBDCConfigurationFunction": "ConfigureADBDC",
		"subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]",
        "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet2Name'))]",
		"subnet3Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet3Name'))]",
		"subnet4Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet4Name'))]",
		"subnet5Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet5Name'))]",
		"subnet6Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet6Name'))]",
		"subnet7Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet7Name'))]",
		"subnet8Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet8Name'))]",
		"subnet9Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet9Name'))]",
		"subnet10Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet10Name'))]",
		"subnet11Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet11Name'))]",
		"networkSecurityGroup1Name": "HySecure-Web-NSG",
		"networkSecurityGroup2Name": "HySecure-Mgmt-NSG",
		"networkSecurityGroup3Name": "HyWorks-Broker-NSG",
		"networkSecurityGroup4Name": "HyWorks-Controller-NSG",
		"networkSecurityGroup5Name": "ADDS-NSG",
		"networkSecurityGroup6Name": "SQL-NSG",
		"networkSecurityGroup7Name": "VDI-NSG",
		"networkSecurityGroup8Name": "ARS-NSG",
        "numberOfHySecureMgmtInstances": 2,
		"numberOfHyWorksControllerInstances": 2,
		"numberOfADDSInstances": 2,
		"numberOfSQLInstances": 2,
		"numberOfARSMasterInstances": 3,
		"numberOfARSDataInstances": 2,
		"numberOfGoldInstances": 1,
		"numberOfInstances" : 2
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "StorageV2"
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet1Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet2Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet3Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet4Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet5Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet6Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet7Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2020-06-01",
            "name": "[variables('availabilitySet8Name')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "PlatformUpdateDomainCount": 5,
                "PlatformFaultDomainCount": 2
            }
        },
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup1Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "Endpoint-HTTPS-443",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "443",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
				{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup2Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-all",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "*",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup3Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup4Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup5Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup6Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup7Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-RDP",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "3389",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"comments": "Default Network Security Group for template",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-05-01",
			"name": "[variables('networkSecurityGroup8Name')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
				{
					"name": "default-allow-SSH",
					"properties": {
					"priority": 1000,
					"access": "Allow",
					"direction": "Inbound",
					"destinationPortRange": "22",
					"protocol": "Tcp",
					"sourceAddressPrefix": "*",
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-06-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup1Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup2Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup3Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup4Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup5Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup6Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup7Name'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup8Name'))]"
			],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "172.16.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet9Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.0/26"
                        }
                    },
					                    {
                        "name": "[variables('subnet10Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.64/26"
                        }
                    },
					{
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.128/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup1Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.160/28",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup2Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.192/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup3Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet4Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.176/28",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup4Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet5Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.224/28",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup5Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet6Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.240/29",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup6Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet11Name')]",
                        "properties": {
                            "addressPrefix": "172.16.0.248/29"
                        }
                    },
					{
                        "name": "[variables('subnet8Name')]",
                        "properties": {
                            "addressPrefix": "172.16.1.0/27",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup8Name'))]"
								}
                        }
                    },
					{
                        "name": "[variables('subnet7Name')]",
                        "properties": {
                            "addressPrefix": "172.16.16.0/20",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroup7Name'))]"
								}
                        }
                    }
                ]
            }
        },
		{
			"apiVersion": "2020-08-01",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"sku": {
                "name": "Standard"
            },
			"properties": {
			"publicIPAddressVersion": "IPv4",
			"publicIPAllocationMethod": "Static"
		/*	"dnsSettings": { */
		/*	"domainNameLabel": "[parameters('dnsNameforLBIP')]" */
		/*				} */
				}
		},
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterface1Name'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('loadBalancer1Name')]"
            ],
            "properties": {
			/*    "primary": true, */
			/*	"enableAcceleratedNetworking": true, */
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer1Name'), 'BackendPool1')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfWebTierInstances')]"
            }
        },
		{
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterface2Name'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('loadBalancer2Name')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            }
        },
		{
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterface3Name'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('loadBalancer2Name')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HyworksBrokerBackendPool')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            }
        },
		{
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-06-01",
            "name": "[concat(variables('networkInterface4Name'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]"
       /*         "[variables('loadBalancer3Name')]" */
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet4Ref')]"
                            }
                        /*    "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer3Name'), 'BackendPool3')]"
                                }
                            ]*/
                        }
                    }
                ]
            },
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numberOfInstances')]"
            }
        },
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-11-01",
			"name": "[variables('networkInterface9Name')[copyIndex()]]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "nicLoop",
				"count": 2
				},
			"dependsOn": [
				"[variables('virtualNetworkName')]"
				],
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Static",
						"privateIPAddress": "[variables('iPAddress')[copyIndex()]]",
						"subnet": {
							"id": "[variables('subnet5Ref')]"
							}
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-11-01",
			"name": "[variables('networkInterface7Name')[copyIndex()]]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "nicLoop",
				"count": 3
				},
			"dependsOn": [
				"[variables('virtualNetworkName')]"
				],
			"properties": {
				"ipConfigurations": [
					{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('subnet7Ref')]"
							}
						}
					}
				]
			}
		},
		/* Public Load balancer*/
		    {
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('loadBalancer1Name')]",
			"apiVersion": "2020-06-01",
			"location": "[parameters('location')]",
			"comments": "This Load Balancer is used to load balance Web traffic among Web Tier VMs",
		/*	"tags": {
			"displayName": "External Load Balancer",
			"quickstartName": "[variables('quickstartTags').name]",
			"provider": "[variables('redHatTags').provider]"
			},*/
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
			],
			"sku": {
                "name": "Standard"
            },
			"properties": {
				"frontendIPConfigurations": [
				{
					"name": "HySecureInternalFrontend",
						"properties": {
							"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							}
					}
				}
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer1Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer1Name'), 'BackendPool1')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer1Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "HTTPS"
						
					}	
        ],
        "probes": [
          {
            "name": "HySecureTCPHealthProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
	/*Internal Load balancer*/
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-06-01",
            "name": "[variables('loadBalancer2Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualNetworkName')]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "privateIPAddress": "172.16.0.164",
                            "privateIPAllocationMethod": "Static"
                        },
                        "name": "HySecureInternalFrontend"
                    },
				    {
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            },
                            "privateIPAddress": "172.16.0.196",
                            "privateIPAllocationMethod": "Static"
                        },
                        "name": "HyworksBrokerFrontend"
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "HySecureMgmtBackendPool"
                    },
					{
                        "name": "HyworksBrokerBackendPool"
                    }
					
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "HTTPS"
						
					},	
					{
						"properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 3306,
                            "backendPort": 3306,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "dbport"
                    },
										{
						"properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 939,
                            "backendPort": 939,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "infoagent"
                    },
										{
						"properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 3636,
                            "backendPort": 3636,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "hapage"
                    },
					{
						"properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HySecureInternalFrontend')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HySecureMgmtBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HySecureTCPHealthProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 51234,
                            "backendPort": 51234,
                            "idleTimeoutInMinutes": 15
                        },
                        "Name": "Remote-Meeting"
                    },
					{
                        "name": "HyWorksBorkerConnectivity",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancer2Name'), 'HyworksBrokerFrontend')]"
                            },
                            "frontendPort": 38866,
                            "backendPort": 38866,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "SourceIPProtocol",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancer2Name'), 'HyworksBrokerBackendPool')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancer2Name'), 'HyworksBrokerHealthProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 443,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        },
                        "name": "HySecureTCPHealthProbe"
                    },
					{
                        "name": "HyworksBrokerHealthProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 38866,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
					{
                        "name": "HySecureHTTPSHealthProbe",
                        "properties": {
                            "protocol": "Https",
                            "port": 443,
                            "requestPath": "/statuscheck",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
	/*HySecure Web Tier Virtual Machine*/
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('HysecureWebNodeNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop",
                "[variables('availabilitySet1Name')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet1Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('HysecureWebNodeNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "accops",
                        "offer": "hysecure",
                        "sku": "accops-hysecure-5427",
                        "version": "1.0.0"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterface1Name'), copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
			"plan": {
                "name": "accops-hysecure-5427",
                "publisher": "accops",
                "product": "hysecure"
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfWebTierInstances')]"
            }
        },
	/*HySecure Mgmt Tier Virtual Machine*/
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('HysecureManagementNodeNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop",
                "[variables('availabilitySet2Name')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet2Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('HysecureManagementNodeNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "accops",
                        "offer": "hysecure",
                        "sku": "accops-hysecure-5427",
                        "version": "1.0.0"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterface2Name'), copyindex()))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
			"plan": {
                "name": "accops-hysecure-5427",
                "publisher": "accops",
                "product": "hysecure"
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfHySecureMgmtInstances')]"
            }
        },
	/*HyWorks Broker Tier Virtual Machine*/		
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('HyworksBrokerNodeNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop",
                "[variables('availabilitySet3Name')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet3Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('HyworksBrokerNodeNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterface3Name'), copyindex()))]"
                        }
                    ]
                },
				"licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('numberOfBrokerTierInstances')]"
            }
        },
/*HyWorks Control Tier Virtual Machine*/				
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('HyworksControllerNodeNamePrefix'), copyindex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]",
                "nicLoop",
                "[variables('availabilitySet4Name')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet4Name'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('HyworksControllerNodeNamePrefix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterface4Name'), copyindex()))]"
                        }
                    ]
                },
				"licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            },
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[variables('numberOfHyWorksControllerInstances')]"
            }
        },
	/*Gold Windows Multisession Image VDI Tier Virtual Machine*/
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('GoldMultisessionVMNamePrefix')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('GoldMultisessionVMNamePrefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoftwindowsdesktop",
                        "offer": "office-365",
                        "sku": "win11-21h2-avd-m365",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'MSVDINic')]"
                        }
                    ]
                },
				"licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            }
        },
/*Gold Windows Dedicated Image VDI Tier Virtual Machine*/
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('GoldDedicatedVMNamePrefix')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('GoldDedicatedVMNamePrefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoftwindowsdesktop",
                        "offer": "Windows-10",
                        "sku": "win10-21h2-avd-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'DVDINic')]"
                        }
                    ]
                },
				"licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            }
        },
/*Gold Windows Server Image VDI Tier Virtual Machine*/
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "name": "[parameters('GoldWindowsServerVMNamePrefix')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('GoldWindowsServerVMNamePrefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[parameters('patchMode')]"
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
						"managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'SHDNic')]"
                        }
                    ]
                },
				"licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('storageAccountName')).primaryEndpoints.blob]"
                    }
                }
            }
        },
/*Domain Controller ADDS Tier Virtual Machine*/		
		{
			"type": "Microsoft.Compute/virtualMachines",
			  "apiVersion": "2020-12-01",
			  "name": "[variables('vmName')[copyIndex()]]",
			  "location": "[parameters('location')]",
			  "dependsOn": [
				"nicLoop",
				"[variables('availabilitySet5Name')]"
			  ],
			  "copy": {
				"name": "vmLoop",
				"count": 2
			  },
			  "properties": {
				"availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySet5Name'))]"
                }, 
				"hardwareProfile": {
				  "vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
				  "computerName": "[variables('vmName')[copyIndex()]]",
				  "adminUsername": "[parameters('adminUsername')]",
				  "adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
				  "imageReference": {
					"publisher": "MicrosoftWindowsServer",
					"offer": "WindowsServer",
					"sku": "2022-datacenter",
					"version": "latest"
				  },
				  "osDisk": {
					"caching": "ReadOnly",
					"createOption": "FromImage",
					"managedDisk": {
					  "storageAccountType": "[parameters('osDiskType')]"
					}
				  },
				   "dataDisks": [
						{
						"diskSizeGB": 32,
						"lun": 0,
						"createOption": "Empty"
						}
					]
				},
				"networkProfile": {
				  "networkInterfaces": [
					{
					  "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface9Name')[copyIndex()])]"
						}
					]
					}
				}
			},
			{
				"type": "Microsoft.Compute/virtualMachines/extensions",
				"apiVersion": "2020-12-01",
				"name": "[concat(variables('vmName')[0], '/CreateAdForest')]",
				"location": "[parameters('location')]",
				"dependsOn": [
					"vmLoop"
					],
				"properties": {
					"publisher": "Microsoft.Powershell",
					"type": "DSC",
					"typeHandlerVersion": "2.24",
					"autoUpgradeMinorVersion": true,
					"settings": {
						"configuration": {
						"url": "[uri(parameters('_artifactsLocation'), 'DSC/CreateADPDC.ps1.zip')]",
						"script": "CreateADPDC.ps1",
						"function": "CreateADPDC"
						},
					"configurationArguments": {
						"domainName": "[parameters('domainName')]"
					}
					},
					"protectedSettings": {
						"configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]",
					"configurationArguments": {
						"adminCreds": {
						"userName": "[parameters('adminUserName')]",
						"password": "[parameters('adminPassword')]"
							}
						}
					}
				}
			},
			{
				"type": "Microsoft.Compute/virtualMachines/extensions",
				"apiVersion": "2020-12-01",
				"name": "[concat(variables('vmName')[1], '/PepareBDC')]",
				"location": "[parameters('location')]",
					"dependsOn": [
						"vmLoop"
					],
				"properties": {
					"publisher": "Microsoft.Powershell",
					"type": "DSC",
					"typeHandlerVersion": "2.24",
					"autoUpgradeMinorVersion": true,
					"settings": {
						"configuration": {
							"url": "[uri(parameters('_artifactsLocation'), 'DSC/PrepareADBDC.ps1.zip')]",
							"script": "PrepareADBDC.ps1",
							"function": "PrepareADBDC"
								},
						"configurationArguments": {
							"DNSServer": "[variables('iPAddress')[0]]"
							}
						},
					"protectedSettings": {
						"configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
					}
				}
			},
			{
				"type": "Microsoft.Resources/deployments",
				"apiVersion": "2020-10-01",
				"name": "UpdateVNetDNS1",
				"dependsOn": [
					"[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName')[0], 'CreateAdForest')]",
					"[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('vmName')[1], 'PepareBDC')]"
					],
				"properties": {
					"mode": "Incremental",
					"templateLink": {
						"uri": "[variables('vnetTemplateUri')]",
						"contentVersion": "1.0.0.0"
					},
					"parameters": {
						"virtualNetworkName": {
							"value": "[variables('virtualNetworkName')]"
							},
						"virtualNetworkAddressRange": {
							"value": "172.16.0.0/16"
							},	
						"subnetName": {
							"value": "ADDSSubnet"
							},
			            "subnetRange": {
							"value": "172.16.0.224/28"
							},	
						"DNSServerAddress": {
							"value": [
							"[variables('ipAddress')[0]]"
								]
							},
						"location": {
							"value": "[parameters('location')]"
						}
					}	}
			},
			{
				"type": "Microsoft.Resources/deployments",
				"apiVersion": "2020-10-01",
				"name": "UpdateBDCNIC",
				"dependsOn": [
					"UpdateVNetDNS1"
						],
				"properties": {
					"mode": "Incremental",
					"templateLink": {
					  "uri": "[variables('nicTemplateUri')]",
					  "contentVersion": "1.0.0.0"
					},					
				"parameters": {
				  "networkInterface9Name": {
					"value": "[variables('networkInterface9Name')[1]]"
				  },
				"ipConfigurations": {
					"value": [
					  {
						"name": "ipconfig1",
						"properties": {
						  "privateIPAllocationMethod": "Static",
						  "privateIPAddress": "[variables('ipAddress')[1]]",
						  "subnet": {
							"id": "[variables('subnet5Ref')]"
						  }
						}
					  }
					]
				  },
				"dnsServers": {
					"value": [
					  "[variables('ipAddress')[0]]"
					]
				  },
				"location": {
					"value": "[parameters('location')]"
						}
					}
			    }
			},
			{
				"type": "Microsoft.Resources/deployments",
				"apiVersion": "2020-10-01",
				"name": "ConfiguringBackupADDomainController",
				"dependsOn": [
					"UpdateBDCNIC"
					],
			    "properties": {
				"mode": "Incremental",
				"templateLink": {
				  "uri": "[variables('configureADBDCTemplateUri')]",
				  "contentVersion": "1.0.0.0"
				},
				"parameters": {
				  "extName": {
					"value": "[concat(variables('vmName')[1], '/PepareBDC')]"
				  },
				"location": {
					"value": "[parameters('location')]"
				  },
				"adminUsername": {
					"value": "[parameters('adminUsername')]"
				  },
				"adminPassword": {
					"value": "[parameters('adminPassword')]"
				  },
				"domainName": {
					"value": "[parameters('domainName')]"
				  },
				"adBDCConfigurationScript": {
					"value": "[variables('adBDCConfigurationScript')]"
				  },
				"adBDCConfigurationFunction": {
					"value": "[variables('adBDCConfigurationFunction')]"
				  },
				"adBDCConfigurationModulesURL": {
					"value": "[variables('adBDCConfigurationModulesURL')]"
				  },
				"_artifactsLocationSasToken": {
					"value": "[parameters('_artifactsLocationSasToken')]"
						}
					}
						  }
			},
			{
				"type": "Microsoft.Resources/deployments",
				"apiVersion": "2020-10-01",
				"name": "UpdateVNetDNS2",
				"dependsOn": [
					"ConfiguringBackupADDomainController"
					],
				"properties": {
					"mode": "Incremental",
					"templateLink": {
						"uri": "[variables('vnetTemplateUri')]",
						"contentVersion": "1.0.0.0"
					},
				"parameters": {
				  "virtualNetworkName": {
					"value": "[variables('virtualNetworkName')]"
					},
			    "virtualNetworkAddressRange": {
					"value": "172.16.0.0/16"
					},
				"subnetName": {
					"value": "[variables('subnet5Name')]"
					},
			    "subnetRange": {
					"value": "172.16.0.224/28"
					},
				"DNSServerAddress": {
					"value": "[variables('ipAddress')]"
				  },
				"location": {
					"value": "[parameters('location')]"
						}
					}
				}
			}
	]
}